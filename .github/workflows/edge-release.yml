name: Edge Release (Pre-release)

on:
 push:
  branches:
   - develop
   - beta
   - alpha
 workflow_dispatch:
  inputs:
   prerelease_type:
    description: 'Pre-release type'
    required: true
    default: 'edge'
    type: choice
    options:
     - edge
     - beta
     - alpha
     - rc

permissions:
 contents: read
 packages: write
 id-token: write
 attestations: write

jobs:
 build-edge:
  runs-on: ubuntu-latest

  steps:
   - name: Checkout code
     uses: actions/checkout@v4

   - name: Determine pre-release tag
     id: tag
     run: |
      if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
        TAG="${{ github.event.inputs.prerelease_type }}"
      else
        case "${{ github.ref_name }}" in
          develop) TAG="edge" ;;
          beta) TAG="beta" ;;
          alpha) TAG="alpha" ;;
          *) TAG="edge" ;;
        esac
      fi
      echo "tag=$TAG" >> $GITHUB_OUTPUT
      echo "version=$(cat package.json | jq -r .version)-$TAG.$(date +'%Y%m%d.%H%M%S')" >> $GITHUB_OUTPUT

   - name: Set up QEMU
     uses: docker/setup-qemu-action@v3

   - name: Set up Docker Buildx
     uses: docker/setup-buildx-action@v3

   - name: Log into GitHub Container Registry
     uses: docker/login-action@v3
     with:
      registry: ghcr.io
      username: ${{ github.actor }}
      password: ${{ secrets.GITHUB_TOKEN }}

   - name: Get current date
     id: date
     run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

   - name: Extract Docker metadata
     id: meta
     uses: docker/metadata-action@v5
     with:
      images: ghcr.io/${{ github.repository }}
      tags: |
       type=raw,value=${{ steps.tag.outputs.tag }}
       type=raw,value=${{ steps.tag.outputs.version }}
       type=raw,value=${{ steps.tag.outputs.tag }}-${{ steps.date.outputs.date }}
       type=sha,prefix=${{ steps.tag.outputs.tag }}-
      labels: |
       org.opencontainers.image.title=Secret Santa App (Pre-release)
       org.opencontainers.image.description=Family Secret Santa application - ${{ steps.tag.outputs.tag }} build
       org.opencontainers.image.vendor=${{ github.repository_owner }}
       org.opencontainers.image.version=${{ steps.tag.outputs.version }}

   - name: Build and push Docker image
     id: build-and-push
     uses: docker/build-push-action@v5
     with:
      context: .
      platforms: linux/amd64,linux/arm64
      push: true
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
      cache-from: type=gha
      cache-to: type=gha,mode=max
      build-args: |
       VERSION=${{ steps.tag.outputs.version }}

   - name: Generate artifact attestation
     uses: actions/attest-build-provenance@v1
     with:
      subject-name: ghcr.io/${{ github.repository }}
      subject-digest: ${{ steps.build-and-push.outputs.digest }}
      push-to-registry: true

   - name: Create deployment summary
     run: |
      echo "## 🚀 Pre-release Deployment" >> $GITHUB_STEP_SUMMARY
      echo "" >> $GITHUB_STEP_SUMMARY
      echo "**Tag:** \`${{ steps.tag.outputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
      echo "**Version:** \`${{ steps.tag.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
      echo "**Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
      echo "" >> $GITHUB_STEP_SUMMARY
      echo "### Pull the image:" >> $GITHUB_STEP_SUMMARY
      echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
      echo "docker pull ghcr.io/${{ github.repository }}:${{ steps.tag.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
      echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      echo "" >> $GITHUB_STEP_SUMMARY
      echo "⚠️ **Note:** This is a pre-release build and may be unstable." >> $GITHUB_STEP_SUMMARY
